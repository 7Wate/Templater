[tp.file]
name = "tp.file"
description = "This module contains every internal variable / function related to files."

[tp.file.functions.content]
name = "tp.file.content"
description = "Retrieves the file's content"
definition = "tp.file.content"
example = "This is some content"

[tp.file.functions.create_new]
name = "tp.file.create_new"
description = "Creates a new file using a specified template or with a specified content."
definition = "tp.file.create_new(template: TFile ⎮ string, filename?: string, open_new: boolean = false, folder?: TFolder)"
example = "None"

[tp.file.functions.create_new.args.template]
name = "template"
description = "Either the template used for the new file content, or the file content as a string."

[tp.file.functions.create_new.args.filename]
name = "filename"
description = "The filename of the new file, defaults to \"Untitled\"."

[tp.file.functions.create_new.args.open_new]
name = "open_new"
description = "Whether to open or not the newly created file. Warning: if you use this option, since commands are executed asynchronously, the file can be opened first and then other commands are appended to that new file and not the previous file."

[tp.file.functions.create_new.args.folder]
name = "folder"
description = "The folder to put the new file in, defaults to obsidian's default location."

[tp.file.functions.creation_date]
name = "tp.file.creation_date"
description = "Retrieves the file's creation date."
definition = "tp.file.creation_date(format: string = \"YYYY-MM-DD HH:mm\")"
example = "2021-01-06 20:27"

[tp.file.functions.creation_date.args.format]
name = "format"
description = "Format for the date, refer to format reference"

[tp.file.functions.cursor]
name = "tp.file.cursor"
description = """
Sets the cursor to this location after the template has been inserted. 

You can navigate between the different tp.file.cursor using the configured hotkey in obsidian settings.
"""
definition = "tp.file.cursor(order?: number)"
example = "None"

[tp.file.functions.cursor.args.order]
name = "order"
description = """
The order of the different cursors jump, e.g. it will jump from 1 to 2 to 3, and so on.
If you specify multiple tp.file.cursor with the same order, the editor will switch to multi-cursor.
"""

[tp.file.functions.cursor_append]
name = "tp.file.cursor_append"
description = "Appends some content after the active cursor in the file."
definition = "tp.file.cursor_append(content: string)"
example = "None"

[tp.file.functions.cursor_append.args.content]
name = "content"
description = "The content to append after the active cursor"

[tp.file.functions.exists]
name = "tp.file.exists"
description = "Checks if a file exists or not. Returns a true / false boolean."
definition = "tp.file.exists(filename: string)"
example = "true"

[tp.file.functions.exists.args.filename]
name = "filename"
description = "The filename of the file we want to check existence, e.g. MyFile."

[tp.file.functions.find_tfile]
name = "tp.file.find_tfile"
description = "Retrieves the file's folder name."
definition = "tp.file.folder(relative: boolean = false)"
example = "Permanent Notes"

[tp.file.functions.find_tfile.args.relative]
name = "relative"
description = "If set to true, appends the vault relative path to the folder name."

[tp.file.functions.include]
name = "tp.file.include"
description = "Includes the file's link content. Templates in the included content will be resolved."
definition = "tp.file.include(include_link: string ⎮ TFile)"
example = "Header for all my templates"

[tp.file.functions.include.args.include_link]
name = "include_link"
description = "The link to the file to include, e.g. [[MyFile]], or a TFile object. Also supports sections or blocks inclusions, e.g. [[MyFile#Section1]]"

[tp.file.functions.last_modified_date]
name = "tp.file.last_modified_date"
description = "Retrieves the file's last modification date."
definition = "tp.file.last_modified_date(format: string = \"YYYY-MM-DD HH:mm\")"
example = "2021-01-06 20:27"

[tp.file.functions.last_modified_date.args.format]
name = "format"
description = "Format for the date, refer to format reference."

[tp.file.functions.move]
name = "tp.file.functions.move"
description = "Moves the file to the desired vault location."
definition = "tp.file.move(new_path: string)"
example = "None"

[tp.file.functions.move.args.new_path]
name = "new_path"
description = "The new vault relative path of the file, without the file extension. Note: the new path needs to include the folder and the filename, e.g. /Notes/MyNote"

[tp.file.functions.path]
name = "tp.file.path"
description = "Retrieves the file's absolute path on the system."
definition = "tp.file.path(relative: boolean = false)"
example = "/path/to/file"

[tp.file.functions.path.args.relative]
name = "relative"
description = "If set to true, only retrieves the vault's relative path."

[tp.file.functions.rename]
name = "tp.file.rename"
description = "Renames the file (keeps the same file extension)."
definition = "tp.file.rename(new_title: string)"
example = "None"

[tp.file.functions.rename.args.new_title]
name = "new_title"
description = "The new file title."

[tp.file.functions.selection]
name = "tp.file.selection"
description = "Retrieves the active file's text selection."
definition = "tp.file.selection()"
example = "Some selected text"

[tp.file.functions.tags]
name = "tp.file.tags"
description = "Retrieves the file's tags (array of string)"
definition = "tp.file.tags"
example = "#note,#seedling,#obsidian"

[tp.file.functions.title]
name = "tp.file.title"
definition = "tp.file.title"
description = "Retrieves the file's title."
example = "MyFile"
